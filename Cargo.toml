[package]
name = "npuzzle"
version = "0.1.0"
authors = ["Stephen Foster <stephenfoster@nevada.unr.edu>"]
edition = "2021"
rust-version = "1.65"


[dependencies]
egui = "0.22.0"
egui_extras = { version = "0.22.0", features = ["image"] }

# specify the image version and features you need
image = { version = "0.24.7", features = ["jpeg", "png"] }
eframe = { version = "0.22.0", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }

rfd = "0.11"
ehttp = "0.3.0"
rand = "0.8.5"
chrono = "0.4.30"


# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.10"
poll-promise = {version = "0.3.0", features = ["web"]}

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
web-sys = { version = "0.3.61", features = ["Window", "Url", "File", "FileReader", "Blob", "HtmlAnchorElement", "BlobPropertyBag", "FilePropertyBag", "Event", "EventTarget"] }
wasm-bindgen = { version = "0.2.84"}
poll-promise = {version = "0.3.0", features = ["web"]}

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2


[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
